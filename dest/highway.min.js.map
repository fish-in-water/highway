{"version":3,"file":null,"sources":["../src/utils.js","../src/component.js","../src/element.js","../src/pipes/lowercase.js","../src/pipes/uppercase.js","../src/pipes/sort.js","../src/pipes/limit.js","../src/pipes/filter.js","../src/pipes/json.js","../src/pipes/date.js","../src/pipes/number.js","../src/pipe.js","../src/services/scope.js","../src/services/event.js","../src/services/timeout.js","../src/services/interval.js","../src/services/http.js","../src/services/find.js","../src/service.js","../src/directives/if.js","../src/directives/repeat.js","../src/directives/on.js","../src/directives/bind.js","../src/directives/value/input/text.js","../src/directives/value/input/number.js","../src/directives/value/input/tel.js","../src/directives/value/input/password.js","../src/directives/value/input/radio.js","../src/directives/value/input/checkbox.js","../src/directives/value/input/index.js","../src/directives/value/textarea.js","../src/directives/value/select.js","../src/directives/value/index.js","../src/directives/show.js","../src/directives/hide.js","../src/directives/disable.js","../src/directives/enable.js","../src/directives/readonly.js","../src/directives/src.js","../src/directives/href.js","../src/directives/klass.js","../src/directives/attr.js","../src/directives/css.js","../src/directives/data.js","../src/directive.js","../src/macros/bind.js","../src/macro.js","../src/compiler.js","../src/view.js","../src/highway.js","../src/index.js"],"sourcesContent":["//import $ from 'Zepto';\n\nexport function noop() {}\n\nlet counter = 0;\nexport function unique(prefix) {\n  return `${prefix || ''}${counter++}`;\n}\n\nexport const assign = function () {\n  const args = Array.prototype.slice.call(arguments);\n  if (typeof jQuery != 'undefined') {\n    const deep = args[args.length - 1];\n    if (deep === true || deep === false) {\n      args.pop();\n      args.unshift(deep);\n    }\n  }\n  return $.extend.apply(this, args);\n};\n\nexport function include(arr, val) {\n  for (var i = 0, ii = arr.length; i < ii; i++) {\n    if (arr[i] === val) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nexport const isPlainObject = $.isPlainObject;\n\nexport function isDate(val) {\n  return val instanceof Date;\n}\n\nexport function isArray(val) {\n  return Object.prototype.toString.call(val) === '[object Array]';\n}\n\nexport function isObject(val) {\n  return val instanceof Object;\n  //return Object.prototype.toString.call(obj) === '[object Object]';\n}\n\nexport function isNumeric(val) {\n  return !isNaN(val);\n}\n\nexport function isTrue(val) {\n  return !(\n    val === false ||\n    val === 'false' ||\n    val === '' ||\n    val == null ||\n    (isNumeric(val) && !(val - 0)));\n}\n\nexport function isEqual(val0, val1) {\n  if (!isObject(val0) && !isObject(val1)) {\n    return val0 === val1;\n  }\n\n  // if (isPlainObject(val0) && isPlainObject(val1)) {\n  //   const merge = assign({}, val0, val1, true);\n  //   for (const key in merge) {\n  //     if (merge.hasOwnProperty(key)) {\n  //       if (!isEqual(merge[key], val1[key])) {\n  //         return false;\n  //       }\n  //     }\n  //   }\n  //   return true;\n  // }\n\n  return false;\n}\n\nexport function extend(options) {\n  const Parent = this;\n  class Child extends Parent {\n    constructor(options) {\n      super(options);\n    }\n  }\n  assign(Child.prototype, options);\n  return Child;\n}\n\nexport function inject(handler, options) {\n  const deps = handler.toString().match(/^function\\s*[^\\(]*\\(\\s*([^\\)]*)\\)/m)[1].replace(/ /g, '').split(',');\n  const args = (deps || []).map(function (dep) {\n    return options[dep];\n  });\n  return function () {\n    return handler.apply(this, args);\n  }\n}\n\nexport class MapList {\n  constructor() {\n    this.data = {};\n  }\n\n  add(key, value) {\n    const data = this.data;\n    const list = data[key] || (data[key] = []);\n    list.push(value);\n    return () => {\n      this.remove(key, value);\n    };\n  }\n\n  remove(key, value) {\n    const data = this.data;\n    const list = data[key] || [];\n    for (let i = 0, ii = list.length; i < ii; i++) {\n      const v = list[i];\n      if (v == null) {\n        continue;\n      }\n      if (value == null || v === value) {\n        list.splice(i, 1);\n        i--;\n      }\n    }\n  }\n\n  find(key, value) {\n    if (key == null) {\n      return [];\n    }\n\n    const data = this.data;\n    const list = data[key] || [];\n    const result = [];\n    for (const v of list) {\n      if (value == null || v === value) {\n        result.push(v);\n      }\n    }\n    return result;\n  }\n\n  clear() {\n    const data = this.data;\n    for (const k in data) {\n      this.remove(k);\n    }\n  }\n\n\n  keys() {\n    const keys = [];\n    for (const key in this.data) {\n      keys.push(key);\n    }\n    return keys;\n  }\n\n  values() {\n    let values = [];\n    for (const key of this.keys()) {\n      values = values.concat(this.find(key));\n    }\n    return values;\n  }\n}\n\nexport function deconstruct(exp) {\n\n\n  /*\n  const exps = exp.trim()\n    .replace(/^[\\{]{2,3}/gi, '')\n    .replace(/^[\\[]{2,3}/gi, '')\n    .replace(/[\\}]{2,3}$/gi, '')\n    .replace(/[\\]]{2,3}$/gi, '')\n    .split('|')\n    .map(function (attr) {\n      return attr.trim();\n    });\n\n  const exps = exp.replace(/[\\[\\]\\{\\}]/gi, '').split('|').map(function (attr) {\n    return attr.trim();\n  });\n  */\n\n  let watch = false;\n  let secure = true;\n\n  if (/{{{\\s*[\\s\\S]+\\s*}}}/.test(exp)) {\n    exp = exp.trim().replace(/^[\\{]{3}|[\\}]{3}$/gi, '');\n    watch = true;\n    secure = false;\n  } else if (/{{\\s*[\\s\\S]+\\s*}}/.test(exp)) {\n    exp = exp.trim().replace(/^[\\{]{2}|[\\}]{2}$/gi, '');\n    watch = true;\n    secure = true;\n  } else if (/\\[\\[\\[\\s*[\\s\\S]+\\s*]]]/.test(exp)) {\n    exp = exp.trim().replace(/^[\\[]{3}|[\\]]{3}$/gi, '');\n    watch = false;\n    secure = false;\n  } else if (/\\[\\[\\s*[\\s\\S]+\\s*]]/.test(exp)) {\n    exp = exp.trim().replace(/^[\\[]{2}|[\\]]{2}$/gi, '');\n    watch = false;\n    secure = true;\n  } else {\n    watch = true;\n    secure = false;\n  }\n\n  const exps = exp.split('|').map(function (attr) {\n      return attr.trim();\n  });\n\n  return {\n    prop: exps[0],\n    watch,\n    secure,\n    pipes: exps.slice(1)\n  }\n}\n\nexport function construct(exp, watch, secure) {\n  exp = (exp || '').trim();\n\n  if (watch) {\n    if (secure) {\n      return `{{${exp}}}`;\n    } else {\n      return `{{{${exp}}}}`;\n    }\n  } else {\n    if (secure) {\n      return `[[${exp}]]`;\n    } else {\n      return `[[[${exp}]]]`;\n    }\n  }\n}\n\nexport function secureHtml(html) {\n  if (null == html || '' == html) {\n    return html;\n  }\n\n  if (typeof html === 'string') {\n    return html.replace(/&/g, '&amp;')\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;')\n      .replace(/\"/g, '&quot;')\n      .replace(/'/g, '&#x27;')\n      .replace(/ /g, '&nbsp;');\n  } else {\n    return html;\n  }\n}\n\nexport function secureUri(html) {\n  if (null == html || '' == html) {\n    return html;\n  }\n\n  if (typeof html === 'string') {\n    return html.replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;')\n      .replace(/\"/g, '&quot;')\n      .replace(/'/g, '&#x27;')\n      .replace(/ /g, '&nbsp;');\n  } else {\n    return html;\n  }\n}\n\nexport function getAttrs($el) {\n  const attrs = {};\n  const node = $el[0];\n  for (const attr in node.attributes) {\n    if (node.attributes.hasOwnProperty(attr)) {\n      attrs[node.attributes[attr].name] = node.attributes[attr].value;\n    }\n  }\n  return attrs;\n}\n\nexport default {\n  unique,\n  assign,\n  include,\n  isPlainObject,\n  isDate,\n  isArray,\n  isObject,\n  isNumeric,\n  isTrue,\n  //isEqual,\n  //extend,\n  //inject,\n  MapList,\n  deconstruct,\n  construct,\n  secureHtml,\n  secureUri,\n  getAttrs\n}\n","import {assign, getAttrs, MapList} from './utils';\nimport element from './element';\n\n// 全局组件\nconst components = {};\n\n/**\n * 组件模块\n * 组件模块完成视图中组件(子视图)的编译\n * 普通视图通过component模块加载(指定标签名),即变成组件\n * 例如\n * <my-app>\n *   <query>\n *   </query>\n *   <todos>\n *   </todos>\n * </my-app>\n * my-app视图拥有query, todos两个组件\n * 视图的组件化是非常重要的,有效避免重复开发\n * @param name 组件名称\n * @param View 视图\n */\nconst component = function (name, View) {\n  components[name.toLowerCase()] = View;\n};\n\nassign(component, {\n\n\t/**\n   * 组件初始化\n   * @param $ctx\n   */\n  initial($ctx) {\n    //$ctx.$children = [];\n\n    // 完成对全局组件、局部组件加载\n    $ctx.$components = assign({}, components, (() => {\n      const components = {};\n      for (const name in $ctx.$components) {\n        components[name.toLowerCase()] = $ctx.$components[name];\n      }\n      return components;\n    })());\n\n    // 组件实例,便于组件实例的释放销毁\n    $ctx.$components._instances = new MapList;\n\n\t\t/**\n     * 记录子组件引用,通过hi-href='key'命令,达到引用子视图的目的\n     * 例如\n     * <my-app>\n     *   <query hi-href='query'>\n     *   </query>\n     *   <todos hi-href='todos'>\n     *   </todos>\n     * </my-app>\n     * 在my-app视图中,就可以使用this.$components.$refs['query']引用子视图\n     */\n    $ctx.$components.$refs = {};\n  },\n\n\t/**\n   * 编译\n   * @param $el 元素\n   * @param $scope 作用域\n   * @param $ctx 上下文\n   * @returns {*}\n   */\n  compile($el, $ctx) {\n\n    // 最对组件进行编译\n    if (!this.isComponent($el, $ctx)) {\n      return $el;\n    }\n\n    // 根节点就是一个标签\n    if ($el === $ctx.$el) {\n\n      // 创建组件,但是并不认为是子组件\n      this.createComponent($el, $ctx, null);\n    } else {\n\n      // 创建当前视图的子组件\n      const instance = this.createComponent($el, $ctx, $ctx);\n\n      // 保存实例对象,便于整体销毁、局部销毁时释放\n      $ctx.$components._instances.add(element.getId(instance.$el, true), instance);\n\n      // 如有hi-ref指令,则需要在$ctx.$components.$refs中加入,便于视图引用\n      const ref = instance.$el.attr('hi-ref');\n      if (ref) {\n        $ctx.$components.$refs[ref] = instance;\n      }\n    }\n\n    return null;\n  },\n\n\t/**\n   * 是否为组件\n   * 根据DOM对象判断是否为组件\n   * 判断依据主要有两个\n   * 1、 根据当前元素ID在_instances中是否能查询出对象实例(针对已实例化的子组件)\n   * 2、 则标签名是否能在$ctx.$components配置中找到(针对未实例化的子组件)\n   * @param $el 元素\n   * @param $ctx 上下文\n   * @returns {*}\n   */\n  isComponent($el, $ctx) {\n\n    // 在实例中能否根据ID找到\n    const instances = $ctx.$components._instances.find(element.getId($el));\n    if (instances && instances.length) {\n      return true;\n    }\n\n    // 看下标签能否在$ctx.$components中找到\n    const node = $el[0];\n    return node &&\n      node.nodeType === 1 &&\n      !!$ctx.$components[node.tagName.toLowerCase()];\n  },\n\n\t/**\n   * 创建组件\n   * @param $el 元素\n   * @param $ctx 上下文\n   * @param $parent 父视图\n   */\n  createComponent($el, $ctx, $parent) {\n    const tagName = $el[0].tagName.toLowerCase();\n    const View = $ctx.$components[tagName];\n    // hi-component打这个属性为了更容易识别(因为编译后标签名就被替换了)\n    const $new = $('<div></div>').html($el.html())\n      .attr(assign({'hi-component': tagName}, getAttrs($el)));\n    $el.replaceWith($new);\n    const instance = new View({$el: $new, $parent});\n    return instance;\n  },\n\n\t/**\n   * 删除组件\n   * @param $el 元素\n   * @param $ctx 上下文\n   */\n  remove($el, $ctx) {\n\n    // 是否为组件\n    if (!component.isComponent($el, $ctx)) {\n      return;\n    }\n\n    // 根据ID找到实例并销毁\n    const id = element.getId($el);\n    if (id != null) {\n\n      $ctx.$components._instances.find(id).forEach(function (instance) {\n        instance.$destroy();\n\n        // 删除引用\n        if (instance.$el) {\n          const ref = instance.$el.attr('hi-ref');\n          if (ref) {\n            delete $ctx.$components.$refs[ref];\n          }\n        }\n\n      });\n      $ctx.$components._instances.remove(id);\n    }\n  },\n\n\t/**\n   * 销毁\n   * @param $ctx 上下文\n   */\n  destroy($ctx) {\n\n    // 所有实例进行销毁\n    $ctx.$components._instances.values().forEach(function (instance) {\n      instance.$destroy();\n    });\n  }\n});\n\nexport default component;\n","import {unique, MapList} from './utils';\nimport component from './component';\n\n/**\n * 元素模块\n * 负责对$el的编译处理,同时提供一部分元素相关工具函数\n * @type {{initial: (($ctx)), compile: (($el, $scope, $ctx)), remove: (($el, $ctx)), getId: (($el, generate?)), destroy: (($ctx))}}\n */\nconst element = {\n\t/**\n   * 初始化\n   * @param $ctx 上下文\n   */\n  initial($ctx) {\n    // 如不存在则初始化一个\n    $ctx.$el = $ctx.$el || $('<div></div>');\n\n    // 如果传入$template参数,则进行模板初始化\n    $ctx.$template && $ctx.$el.html($($ctx.$template));\n  },\n\t/**\n   * 删除\n   * @param $el 元素\n   * @param $ctx 上下文\n   */\n  remove($el, $ctx) {\n    $el.remove();\n  },\n\t/**\n   * 获取元素唯一ID\n   * @param $el 元素\n   * @param generate 如不存在ID,是否生成\n   * @returns {*}\n   */\n  getId($el, generate = false) {\n    let id = $el.attr('hi-id');\n    if (generate && id == null) {\n      $el.attr('hi-id', id = unique());\n    }\n    return id;\n  },\n\t/**\n   * 销毁\n   * @param $ctx\n   */\n  destroy($ctx) {\n    $ctx.$el.remove();\n    $ctx.$el = null;\n    $ctx.$template = null;\n  }\n};\n\nexport default element;\n","const lowercase = function () {\n  return {\n    $iterator($value) {\n      if ($value == null) {\n        return $value;\n      }\n\n      return ($value + '').toLowerCase();\n    }\n  }\n};\n\nexport default lowercase;\n","const uppercase = function () {\n  return {\n    $iterator($value) {\n      if ($value == null) {\n        return $value;\n      }\n\n      return ($value + '').toUpperCase();\n    }\n  }\n};\n\nexport default uppercase;\n","import {deconstruct, secureHtml} from '../utils';\n\nconst sort = function ({$source: {\n    prop: sourceProp, watch: sourceWatch, secure: sourceSecure\n  }, $exp, $scope, $pipeline, $update}) {\n\n  const matches = $exp.match(/(\\S+)\\s+(\\S+)/);\n  const {prop: fieldProp} = deconstruct(matches[1]);\n  const {prop: ascProp} = deconstruct(matches[2] || \"'asc'\");\n  const iterator = function ($value) {\n    const field = $scope.$get(fieldProp);\n    const asc = $scope.$get(ascProp);\n\n    return $value.sort(function (a, b) {\n      if (asc === 'asc') {\n        return a[field] > b[field] ? 1 : -1;\n      } else {\n        return a[field] > b[field] ? -1 : 1;\n      }\n\n      // if (a[field] > b[field]) {\n      //   return asc === 'asc' ? 1 : -1;\n      // } else if (a[field] < b[field]) {\n      //   return asc === 'asc' ? 1 : -1;\n      // } else {\n      //   return 0;\n      // }\n    })\n  };\n\n\n  if (sourceWatch) {\n    let fieldUnwatcher;\n    let ascUnwatcher;\n    return {\n      $mount() {\n        fieldUnwatcher = $scope.$watch(fieldProp, function () {\n          $update($pipeline($scope.$get(sourceProp), sourceSecure));\n        });\n\n        ascUnwatcher = $scope.$watch(ascProp, function () {\n          $update($pipeline($scope.$get(sourceProp), sourceSecure));\n        });\n      },\n      $iterator: iterator,\n      $unmount() {\n        fieldUnwatcher();\n        ascUnwatcher();\n      }\n    }\n  } else {\n    return {\n      $iterator: iterator\n    };\n  }\n\n\n};\n\nexport default sort;\n","import {deconstruct, secureHtml, isNumeric} from '../utils';\n\nconst limit = function ({$source: {\n    prop: sourceProp, watch: sourceWatch, secure: sourceSecure\n  }, $exp, $scope, $pipeline, $update}) {\n\n  const {prop} = deconstruct($exp);\n  const iterator = function ($value) {\n    return ($value || []).slice(0, (isNumeric($exp) ? $exp: $scope.$get($exp)) - 0);\n  };\n\n  if (sourceWatch) {\n    let unwatcher = null;\n    return {\n      $mount() {\n        unwatcher = $scope.$watch(prop, function () {\n          $update($pipeline(sourceProp ? secureHtml($scope.$get(sourceProp)) : $scope.$get(sourceProp)));\n        });\n      },\n      $iterator: iterator,\n      $unmount() {\n        unwatcher();\n      }\n    };\n  } else {\n    return {\n      $iterator: iterator\n    }\n  }\n};\n\nexport default limit;\n","  import {deconstruct, secureHtml, isNumeric} from '../utils';\n\n// =,!=,^=,$=,*=\n\nconst SYMBOLS = {\n  EQUAL: '=',\n  STRICT_EQUAL: '==',\n  NOT_EQUAL: '!=',\n  STRICT_NOT_EQUAL: '!==',\n  START_WITH: '^=',\n  END_WITH: '$=',\n  CONTAINS: '*='\n};\n\nconst filter = function ({$source: {\n  prop: sourceProp, watch: sourceWatch, secure: sourceSecure\n  }, $exp, $scope, $pipeline, $update}) {\n\n  const conds = $exp.split(/or/i).map(function (exp) {\n    const matches = exp.trim().match(/(\\S+)\\s*([=!^$*]+)\\s*(\\S+)/);\n    return {\n      field: deconstruct(matches[1]),\n      symbol: matches[2],\n      value: deconstruct(matches[3])\n    }\n  });\n\n  const satisfy = function (obj) {\n    for (const {field: {prop: fieldProp},\n      symbol,\n      value: {prop: valueProp}} of conds) {\n\n      const prop = $scope.$get(fieldProp);\n      const val = $scope.$get(valueProp);\n\n      if (symbol === SYMBOLS.EQUAL &&\n        obj[prop] == val) {\n        return true;\n      } else if (symbol === SYMBOLS.STRICT_EQUAL &&\n        obj[prop] === val) {\n        return true;\n      } else if (symbol === SYMBOLS.NOT_EQUAL &&\n        obj[prop] != val) {\n        return true;\n      } else if (symbol === SYMBOLS.STRICT_NOT_EQUAL &&\n        obj[prop] !== val) {\n        return true;\n      } else if (symbol === SYMBOLS.START_WITH &&\n        (new RegExp(`^${val}`).test(obj[prop]))) {\n        return true;\n      } else if (symbol === SYMBOLS.END_WITH &&\n        (new RegExp(`${val}$`).test(obj[prop]))) {\n        return true;\n      } else if (symbol === SYMBOLS.CONTAINS &&\n        (new RegExp(`${val}`).test(obj[prop]))) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  const iterator = function ($value) {\n    const result = [];\n    for (const item of $value || []) {\n      satisfy(item) && result.push(item);\n    }\n    return result;\n  };\n\n  if (sourceWatch) {\n    let unwatchers = [];\n    return {\n      $mount() {\n        for (const {field: {prop: fieldProp},\n          value: {prop: valueProp}} of conds) {\n\n          unwatchers.push($scope.$watch(fieldProp, function () {\n            $update($pipeline($scope.$get(sourceProp)));\n          }));\n\n          unwatchers.push($scope.$watch(valueProp, function () {\n            $update($pipeline($scope.$get(sourceProp)));\n          }));\n        }\n      },\n      $iterator: iterator,\n      $unmount() {\n        for (const unwatcher of unwatchers) {\n          unwatcher();\n        }\n        unwatchers = null;\n      }\n    };\n  } else {\n    return {\n      $iterator: iterator\n    }\n  }\n};\n\nexport default filter;\n","import {isObject} from '../utils';\n\nconst json = function () {\n  return {\n    $iterator($value) {\n      if (isObject($value)) {\n        return JSON.stringify($value);\n      } else {\n        return $value;\n      }\n    }\n  }\n};\n\nexport default json;\n","import {isDate, deconstruct, secureHtml} from '../utils';\n\nconst date = function ({$source: {\n  prop: sourceProp, watch: sourceWatch, secure: sourceSecure\n  }, $exp, $scope, $pipeline, $update}) {\n\n  const {prop} = deconstruct($exp);\n  const iterator = function ($value) {\n    if (isDate($value)) {\n      let format = $scope.$get(prop);\n      const obj = {\n        \"M+\": $value.getMonth() + 1,\n        \"d+\": $value.getDate(),\n        \"h+\": $value.getHours(),\n        \"m+\": $value.getMinutes(),\n        \"s+\": $value.getSeconds(),\n        \"q+\": Math.floor(($value.getMonth() + 3) / 3),\n        \"S\": $value.getMilliseconds()\n      };\n\n      if (/(y+)/.test(format)) {\n        format = format.replace(RegExp.$1, ($value.getFullYear() + '').substr(4 - RegExp.$1.length));\n      }\n\n      for (const key in obj) {\n        if (new RegExp(\"(\" + key + \")\").test(format)) {\n          format = format.replace(RegExp.$1, (RegExp.$1.length == 1) ?\n            (obj[k]) : ((\"00\" + obj[key]).substr((\"\" + obj[key]).length)));\n        }\n      }\n\n      return format;\n      //return JSON.stringify($value);\n    } else {\n      return $value;\n    }\n  };\n\n  if (sourceWatch) {\n    let unwatcher = null;\n    return {\n      $mount() {\n        unwatcher = $scope.$watch(prop, function () {\n          $update($pipeline(sourceProp ? secureHtml($scope.$get(sourceProp)) : $scope.$get(sourceProp)));\n        });\n      },\n      $iterator: iterator,\n      $unmount() {\n        unwatcher();\n      }\n    };\n  } else {\n    return {\n      $iterator: iterator\n    }\n  }\n};\n\nexport default date;\n","import {deconstruct, secureHtml, isNumeric} from '../utils';\n\nconst number = function ({$source: {\n  prop: sourceProp, watch: sourceWatch, secure: sourceSecure\n  }, $exp, $scope, $pipeline, $update}) {\n\n  const {prop} = deconstruct($exp);\n  const iterator = function ($value) {\n    if (isNumeric($value)) {\n      return ($value).toFixed($scope.$get($exp) - 0);\n    } else {\n      return $value;\n    }\n  };\n\n  if (sourceWatch) {\n    let unwatcher = null;\n    return {\n      $mount() {\n        unwatcher = $scope.$watch(prop, function () {\n          $update($pipeline(sourceProp ? secureHtml($scope.$get(sourceProp)) : $scope.$get(sourceProp)));\n        });\n      },\n      $iterator: iterator,\n      $unmount() {\n        unwatcher();\n      }\n    };\n  } else {\n    return {\n      $iterator: iterator\n    }\n  }\n};\n\nexport default number;\n","import {assign, unique, MapList} from './utils';\n\n// 全局管道指令\nconst pipes = {};\n\n/**\n * 管道\n * 利用管道符“|”将两个命令隔开，管道符左边命令的输出就会作为管道符右边命令的输入。\n * 连续使用管道意味着第一个命令的输出会作为第二个命令的输入，第二个命令的输出又会作为第三个命令的输入，依此类推。\n * 例如: {{'name | uppercase'}}\n * @param name 管道名称\n * @param factory 工厂函数\n */\nconst pipe = function (name, factory) {\n  pipes[name] = factory;\n};\n\nassign(pipe, {\n\n\t/**\n   * 初始化,在编译器初始化时调用\n   * @param $ctx 上下文\n   */\n  initial($ctx) {\n\n    // 加载全局管道、局部管道至当前上下文\n    $ctx.$pipes = assign({}, pipes, $ctx.$pipes);\n\n    // 记录管道实例,便于销毁释放\n    $ctx.$pipes._instances = new MapList;\n  },\n\t/**\n   * 管道编译\n   * @param $source 原始字段\n   * @param $pipes 管道组\n   * @param $scope 作用域\n   * @param $update 更新函数\n   * @param $ctx 上下文\n   * 例如{{name | uppercase | lowercase}}中\n   * $source = name\n   * $pipes = ['uppercase', 'lowercase']\n   * $update函数句柄,调用该函数触发更新,用于管道中的双向绑定\n\t */\n  compile($source, $pipes, $scope, $update, $ctx) {\n\n    const id = unique('p');\n\n\t\t/**\n     * 管道线\n     * 在一个指令中可能有多个管道,例如{{name | uppercase | lowercase}}\n     * @param value\n     * @returns {*}\n     */\n    const pipeline = function (value) {\n\n\t\t\t// 触发所有宏指令替换,获得结果字符串\n      return $ctx.$pipes._instances.find(id).reduce(function (value, instance) {\n        return instance.$iterator(value)\n      }, value);\n    };\n\n\t\t/**\n     * 对指令中的管道进行编译\n     */\n    for (const pipe of $pipes) {\n      let name, exp;\n      const index = pipe.indexOf(':');\n      if (index != -1) {\n        name = pipe.substring(0, index).trim();\n        exp = pipe.substring(index + 1).trim();\n      } else {\n        name = pipe;\n        exp = null;\n      }\n\n\t\t\t/**\n       * 获取管道实例\n       * 以income | number: fixedField 为例\n       * 如income = 1000, fixedField = 2, 结果1000.00\n       */\n      const instance = $ctx.$pipes[name]({\n        $source, //原始字段。 示例值: income\n        $ctx, // 上下文\n        $scope, // 作用域\n        //$pipe: name, // 管道名称。示例值: number\n        $exp: exp, // 表达式。示例值: fixedField字段\n        $update, // 更新函数。如需要,管道同样可以进行双向绑定,当管道发生变化时,触发update函数\n        $pipeline: pipeline //管道线\n      });\n\n      if (instance) {\n        // $mount hook\n        instance.$mount && instance.$mount($ctx);\n\n        // 增加管道实例\n        $ctx.$pipes._instances.add(id, instance);\n      }\n    }\n\n    // 返回管道线,使调用方可以保持管道线实例\n    return assign(pipeline, {\n\t\t\t/**\n       * 赋予管道线实例销毁能力\n       * 当管道线不需要时候,可主动销毁\n       */\n      destroy: function () {\n        const instances = $ctx.$pipes._instances.find(id);\n        for (const instance of instances) {\n          instance.$unmount && instance.$unmount($ctx);\n        }\n        $ctx.$pipes._instances.remove(id);\n      }\n    })\n  },\n\n\t/**\n   * 销毁\n   * @param $ctx\n   */\n  destroy($ctx) {\n    $ctx.$pipes._instances.clear();\n    $ctx.$pipes._instances = null;\n    $ctx.$pipes = null;\n  }\n});\n\nexport default pipe;\n\n// 内建管道\nimport lowercase from './pipes/lowercase';\nimport uppercase from './pipes/uppercase';\nimport sort from './pipes/sort';\nimport limit from './pipes/limit';\nimport filter from './pipes/filter';\nimport json from './pipes/json';\nimport date from './pipes/date';\nimport number from './pipes/number';\n\npipe('lowercase', lowercase);\npipe('uppercase', uppercase);\npipe('sort', sort);\npipe('limit', limit);\npipe('filter', filter);\npipe('json', json);\npipe('date', date);\npipe('number', number);\n","import {assign, isArray, isObject, isDate, isEqual, secureHtml, MapList} from '../utils';\nimport pipe from '../pipe';\n\nconst scope = function ({$ctx}) {\n  const factory = function (obj) {\n    let series = {};\n    let watchers = new MapList;\n\n    return assign(Object.create({\n\n      $create(obj) {\n        const scope = factory(obj);\n        scope.$parent = this;\n        return scope;\n      },\n\n      $series(data) {\n        const series = {};\n\n        const iterator = function (prop, data) {\n\n          series[prop] = data;\n\n          if (isArray(data)) {\n            for (let i = 0, ii = data.length; i < ii; i++) {\n              const prop2 = prop + `[${i}]`;\n              series[prop2] = data[i];\n              iterator(prop + `[${i}]`, data[i]);\n            }\n          } else if (isObject(data)) {\n            for (const key in data) {\n              if (data.hasOwnProperty(key)) {\n                const childProp = prop ? `${prop}.${key}` : `${key}`;\n                iterator(childProp, data[key]);\n              }\n            }\n          }\n        };\n\n        iterator('', data);\n\n        return series;\n      },\n\n      $where(prop = '') {\n        if (!prop) {\n          return {\n            scope: this,\n            prop\n          }\n        }\n\n        const matches = prop.match(/^(?:\\$parent).([\\s\\S]*)/);\n        if (matches) {\n          return {\n            scope: $ctx.$parent.$scope,\n            prop: matches[1]\n          }\n        }\n\n        // scope chains\n        //const first = prop.match(/^([^.\\[\\]])+/)[0];\n        //if (typeof series[first] === 'undefined' && this.$parent) {\n        //  return {\n        //    scope: $ctx.$parent.$scope,\n        //    prop\n        //  }\n        //}\n\n        return {\n          scope: this,\n          prop\n        }\n      },\n\n      $get(prop = '') {\n        const matches = prop.match(/^['\"]([\\s\\S]*)['\"]$/)\n        if (matches) {\n          return matches[1];\n        }\n\n        const where = this.$where(prop);\n        if (where.scope === this) {\n          const val = (() => {\n            let val = series[prop];\n            let scope = this;\n            while (typeof val === 'undefined' && scope.$parent) {\n              scope = scope.$parent;\n              val = scope.$get(prop);\n            }\n\n            return val;\n          }).call(this);\n\n\n          if (isObject(val)) {\n            if (isDate(val)) {\n              return new Date(val);\n            } else if (isArray(val)) {\n              return assign([], val, true);\n            }  else {\n              return assign({}, val, true);\n            }\n          } else {\n            return val;\n          }\n          /*\n          if (isDate(val)) {\n            return new Date(val);\n          } else if (isArray(val)) {\n            return assign([], val);\n          } else if (isObject(val)) {\n            return assign({}, val);\n          } else {\n            return val;\n          }\n          */\n        } else {\n          return where.scope.$get(where.prop);\n        }\n      },\n\n      $set(prop = '', newVal = void 0) {\n        const matches = prop.match(/^['\"]([\\s\\S]*)['\"]$/)\n        if (matches) {\n          return matches[1];\n        }\n\n        if (prop) {\n          const iterator = function (path, val, obj) {\n            const props = path.split('.');\n            const tmp = props.shift();\n            const matches = tmp.match(/([^\\[]+)\\[(\\d+)]/);\n            //array\n            if (matches) {\n              const prop = matches[1];\n              const index = matches[2] - 0;\n              if (obj[prop] == null) {\n                obj[prop] = [];\n              }\n\n              if (!props.length) {\n                obj[prop][index] = val;\n              } else {\n                if (obj[prop][index] == null) {\n                  obj[prop][index] = {};\n                }\n                iterator(props.join('.'), val, obj[prop][index]);\n              }\n            } else {\n              const prop = tmp;\n              if (!props.length) {\n                obj[prop] = val;\n              } else {\n                if (obj[prop] == null) {\n                  obj[prop] = {};\n                }\n                iterator(props.join('.'), val, obj[prop]);\n              }\n            }\n          };\n\n          iterator(prop, newVal, this);\n\n        } else {\n          for (const key in this) {\n            if (this.hasOwnProperty(key)) {\n              delete this[key];\n            }\n          }\n\n          assign(this, newVal);\n        }\n\n        const oldSeries = series;\n        const newSeries = series = this.$series(this);\n\n        //const reg = new RegExp(`^${prop}`);\n        const arrayIndex = prop.indexOf('[');\n        if (-1 != arrayIndex) {\n          prop = prop.substring(0, arrayIndex);\n        }\n\n        const keys = watchers.keys();\n        for (const key of keys) {\n          const props = prop.split('.');\n          const keys = key.split('.');\n\n          if (0 === key.indexOf(prop) &&\n            props[props.length - 1] === keys[props.length - 1]) {\n\n            const oldValue = oldSeries[key];\n            const newValue = newSeries[key];\n\n            if (!isEqual(newValue, oldValue)) {\n              this.$fire(key, newValue, oldValue);\n            }\n          }\n        }\n\n        return newVal;\n      },\n\n      $watch(prop, handler) {\n        const where = this.$where(prop);\n        if (where.scope === this) {\n          return watchers.add(prop, handler);\n        } else {\n          return where.scope.$watch(where.prop, handler);\n        }\n      },\n\n      $unwatch(prop, handler) {\n        const where = this.$where(prop);\n        if (where.scope === this) {\n          return watchers.remove(prop, handler);\n        } else {\n          return where.scope.$unwatch(where.prop, handler);\n        }\n      },\n\n      $fire(prop, newVal, oldVal) {\n        const handlers = watchers.find(prop);\n        for (const handler of handlers) {\n          handler(newVal, oldVal);\n        }\n      },\n\n      // $pipe(val, pipes) {\n      //   return pipe.compile(val, pipes, $ctx);\n      // },\n\n      $mount() {\n        series = this.$series(this);\n        return this;\n      },\n\n      $unmount() {\n        series = null;\n        watchers.clear();\n        return this;\n      }\n    }), obj);\n  };\n\n  $ctx.$scope = factory($ctx.$scope);\n  $ctx.$get = $ctx.$scope.$get.bind($ctx.$scope);\n  $ctx.$set = $ctx.$scope.$set.bind($ctx.$scope);\n  $ctx.$watch = $ctx.$scope.$watch.bind($ctx.$scope);\n  $ctx.$unwatch = $ctx.$scope.$unwatch.bind($ctx.$scope);\n  $ctx.$fire = $ctx.$scope.$fire.bind($ctx.$scope);\n\n  return $ctx.$scope;\n};\n\nexport default scope;\n","import {MapList} from '../utils';\n\nconst event = function ({$ctx}) {\n  let events = new MapList;\n\n  $ctx.$on = function (name, handler) {\n    return events.add(name, handler);\n  };\n\n  $ctx.$off = function (name, handler) {\n    events.remove(name, handler);\n  };\n\n  $ctx.$listenTo = function (obj, name, handler) {\n    return obj.$on(name, handler);\n  };\n\n  $ctx.$listenToOnce = function (obj, name, handler) {\n    let stopper = null;\n    const once = function () {\n      handler.apply(this, arguments);\n      stopper();\n    };\n\n    return stopper = $ctx.$listenTo(obj, name, once);\n  };\n\n  $ctx.$stopListening = function (obj, name, handler) {\n    return obj.$off(name, handler);\n  };\n\n  $ctx.$fire = function (name, data) {\n    const handlers = events.find(name);\n    for (const handler of handlers) {\n      if (handler.call($ctx, data) === false) {\n        return false;\n      }\n    }\n  };\n\n  $ctx.$emit = function (name, data) {\n    const parent = $ctx.$parent;\n    if (parent) {\n      if (parent.$fire(name, data) === false) {\n        return;\n      }\n      parent.$emit(name, data);\n    }\n  };\n\n  $ctx.$broadcast = function (name, data) {\n    for (const child of $ctx.$components._instances.values()) {\n      if (child.$fire(name, data) === false) {\n        break;\n      }\n      child.$broadcast(name, data);\n    }\n  };\n\n  return {\n    $on: $ctx.$on,\n    $off: $ctx.$off,\n    $fire: $ctx.$fire,\n    $emit: $ctx.$emit,\n    $broadcast: $ctx.$broadcast,\n    $fire: $ctx.$fire,\n    $listenTo: $ctx.$listenTo,\n    $listenToOnce: $ctx.listenToOnce,\n    $$stopListening: $ctx.$stopListening,\n    $unmount: function () {\n      events.clear();\n      events = null;\n    }\n  }\n};\n\nexport default event;\n","import {assign} from '../utils';\n\nconst timeout = function ({$ctx}) {\n  const ids = [];\n\n  $ctx.$timeout = assign(function (handler, delay) {\n    return ids.push(window.setTimeout(handler.bind($ctx), delay));\n  }, {\n    $clear(id) {\n      window.clearTimeout(id);\n    },\n    $unmount() {\n      ids.forEach((id) => {\n        this.$clear(id);\n      })\n    }\n  });\n\n  return $ctx.$timeout;\n};\n\nexport default timeout;\n","import {assign} from '../utils';\n\nconst timeout = function ({$ctx}) {\n  const ids = [];\n\n  $ctx.$interval = assign(function (handler, delay) {\n    return ids.push(window.setInterval(handler.bind($ctx), delay));\n  }, {\n    $clear(id) {\n      window.clearInterval(id);\n    },\n    $unmount() {\n      ids.forEach((id) => {\n        this.$clear(id);\n      })\n    }\n  });\n\n  return $ctx.$interval;\n};\n\nexport default timeout;\n","import {assign} from '../utils';\n//import $ from 'Zepto';\n\nconst http = function ({$ctx}) {\n\n  $ctx.$http = assign(function (options) {\n    return $.ajax(options);\n  }, {\n    $get: $.get,\n    $post: $.post,\n    $json: $.getJSON,\n    $jsonp: $.ajaxJSONP,\n    $settings: $.ajaxSettings || $.ajaxSetup\n  });\n\n  return $ctx.$http;\n};\n\nexport default http;\n","import {assign} from '../utils';\n\nconst find = function ({$ctx}) {\n  $ctx.$find = function (selector) {\n    return $ctx.$el.find(selector)\n  };\n  return $ctx.$find;\n};\n\nexport default find;\n","import {assign} from './utils';\n\nconst services = {};\n\nconst service = function (name, factory) {\n  services[name] = factory;\n};\n\nassign(service, {\n  initial($ctx) {\n    $ctx.$services = assign({}, services, $ctx.$services);\n    for (const name in $ctx.$services) {\n      const instance = $ctx.$services[name]({$ctx});\n      $ctx.$services[name] = instance;\n      instance.$mount && instance.$mount({$ctx});\n    }\n  },\n  //compile($el, $scope, $ctx) {\n\t//\n  //},\n  destroy($ctx) {\n    for (const name in $ctx.$services) {\n      const instance = $ctx.$services[name];\n      instance.$unmount && instance.$unmount({$ctx});\n    }\n\n    $ctx.$services = null;\n  }\n});\n\nexport default service;\n\n// install build-in\nimport scope from './services/scope';\nimport event from './services/event';\nimport timeout from './services/timeout';\nimport interval from './services/interval';\nimport http from './services/http';\nimport find from './services/find';\n\nservice('$scope', scope);\nservice('$event', event);\nservice('$timeout', timeout);\nservice('$interval', interval);\nservice('$http', http);\nservice('$find', find);\n\n","import {deconstruct, secureHtml, isTrue} from '../utils';\nimport compiler from '../compiler';\nimport element from '../element';\nimport directive from '../directive';\n\nconst ef = function ({$ctx, $el, $arg, $directive, $exp, $scope}) { //$ctx, $el, $arg, $exp\n  const {prop, watch} = deconstruct($exp);\n  const $clone = $el.clone().removeAttr($directive);\n  const $prev = $el.prev();\n  const $next = $el.next();\n  const $parent = $el.parent();\n  let $new = $el;\n  const watcher = function (value) {\n\n    if (isTrue(value)) {\n      $new = $clone.clone();\n      if ($next.length && $next.parent().length) {\n        $new.insertBefore($next);\n      } else if ($prev.length && $prev.parent().length) {\n        $new.insertAfter($prev);\n      } else {\n        $new.appendTo($parent);\n      }\n\n      compiler.compile($new, $scope, $ctx);\n      //$ctx.$compile($new);\n      //\n\n      //$scope.$unwatch(prop, watcher);\n    } else {\n      compiler.remove($new, $ctx);\n      //$ctx.$remove($new);\n      //$scope.$watch(prop, watcher);\n    }\n  };\n\n  if (!$ctx.$scope.$get(prop)) {\n    compiler.remove($el, $ctx);\n    //$ctx.$remove($el);\n  }\n\n  if (watch) {\n    let unwatcher = null;\n    return {\n      $mount() {\n        unwatcher = $scope.$watch(prop, watcher);\n      },\n      $unmount() {\n        unwatcher();\n      },\n      $el: null\n    };\n  }\n};\n\nexport default ef;\n","import {deconstruct, secureHtml, isArray, isObject, assign} from '../utils';\nimport compiler from '../compiler';\nimport pipe from '../pipe';\n\nlet counter = 0;\n\nconst repeat = function ({$ctx, $el, $arg, $exp, $scope, $directive}) {\n  const {prop, watch, secure, pipes} = deconstruct($exp);\n\n  const $clone = $el.clone().removeAttr($directive).removeAttr('hi-id');\n  const $prev = $el.prev();\n  const $next = $el.next();\n  const $parent = $el.parent();\n  const matches = prop.match(/(\\S*)\\s+in\\s+(\\S*)/);\n  const itemProp = matches[1];\n  const arrayProp = matches[2];\n  let $els = [];\n  let scopes = [];\n\n  // remove current el\n  //$ctx.$remove($el);\n  compiler.remove($el, $ctx);\n\n  const clear = function () {\n    // clear els\n    for (const $el of $els) {\n      //$ctx.$remove($el);\n      compiler.remove($el, $ctx);\n    }\n    $els = [];\n\n    // clear scopes\n    for (const scope of scopes) {\n      scope.$unmount();\n    }\n    scopes = [];\n  };\n\n  const watcher = function (value) {\n    clear();\n\n    if (value && isArray(value) && value.length) {\n      for (let i = 0, ii = value.length; i < ii; i++) {\n\n        (function () {\n          const data = {};\n          if (isObject(value[i])) {\n            data[itemProp] = assign(value[i], {$index: i});\n          } else {\n            data[itemProp] = value[i];\n          }\n\n          // create new scope\n          const scope = $scope.$create(data).$mount();\n          //scope.$parent = $scope;\n          scopes.push(scope);\n\n          // create new element\n          const $el = $clone.clone();\n\n          // compile\n          $ctx.$scope = scope;\n\n          compiler.compile($el, scope, $ctx);\n          $ctx.$scope = $scope;\n\n          //$ctx.$compile($el, scope);\n\n          $el.attr('hi-compiled', 'true');\n\n          $els.push($el);\n\n        })();\n      }\n\n      if ($el.length && $next.parent().length) {\n        for (const $el of $els) {\n          $el.insertBefore($next);\n        }\n      } else if ($prev.length && $prev.parent().length) {\n        for (const $el of $els.reverse()) {\n          $el.insertAfter($prev);\n        }\n      } else {\n        for (const $el of $els) {\n          $el.appendTo($parent);\n        }\n      }\n    }\n  };\n\n  const pipeline = pipe.compile({\n    prop: arrayProp, watch, secure\n  }, pipes, $scope, watcher, $ctx);\n\n  watcher(pipeline($scope.$get(arrayProp)));\n\n  if (watch) {\n    let unwatcher = null;\n    return {\n      $mount() {\n        unwatcher = $scope.$watch(arrayProp, function (value) {\n          watcher(pipeline(value))\n        });\n      },\n      $unmount() {\n\n        pipeline.destroy();\n\n        clear();\n\n        unwatcher();\n      },\n      $el: null\n    };\n  } else {\n    pipeline.destroy();\n  }\n};\n\nexport default repeat;\n","\nconst on = function ({$ctx, $el, $arg, $exp}) { //$ctx, $el, $arg, $exp\n  const handler = function ($ev) {\n    $ctx[$exp]($el, $ev);\n  };\n\n  return {\n    $mount() {\n      $el.on($arg, handler);\n    },\n    $unmount() {\n      $el.off($arg, handler);\n    }\n  }\n};\n\nexport default on;\n","import directive from '../directive';\nimport {secureHtml, isObject, isEqual, deconstruct} from '../utils';\n\nconst bind = function ({$el, $exp, $scope, $ctx}) { //$ctx, $el, $arg, $exp\n  return directive.pattern($exp, $scope, $ctx, function ({newVal, secure}) {\n    newVal = secure ? secureHtml(newVal) : newVal;\n    newVal = isObject(newVal) ? newVal.toString() : newVal;\n    $el.html(newVal);\n  });\n};\n\nexport default bind;\n","import pipe from '../../../pipe';\nimport {deconstruct, secureHtml} from '../../../utils';\n\nconst text = function ({$ctx, $el, $exp, $scope}) { //$ctx, $el, $arg, $exp\n  const {prop, watch, secure, pipes} = deconstruct($exp);\n  let $srcEl = null;\n  const watcher = function (value) {\n    if ($srcEl === $el) {\n      return;\n    }\n\n    value = value == null ? '' : value + '';\n    $el.val(secure ? secureHtml(value) : value);\n  };\n  const inputer = function () {\n    $srcEl = $el;\n    $scope.$set(prop, $el.val());\n    $srcEl = null;\n  };\n  const pipeline = pipe.compile({\n    prop: prop, watch, secure\n  }, pipes, $scope, watcher, $ctx);\n\n  watcher(pipeline($scope.$get(prop)));\n\n  if (watch) {\n    let unwatcher = null;\n    return {\n      $mount() {\n        unwatcher = $scope.$watch(prop, function (value) {\n          watcher(pipeline(value));\n        });\n        $el.on('input', inputer);\n        $el.on('change', inputer);\n      },\n      $unmount() {\n        unwatcher();\n        $el.off('input', inputer);\n        $el.off('change', inputer);\n        pipeline.destroy();\n      }\n    };\n  } else {\n    pipeline.destroy();\n  }\n};\n\nexport default text;\n","import text from './text';\n\nconst number = text;\n\nexport default number;\n\n","import text from './text';\n\nconst tel = text;\n\nexport default tel;\n\n","import text from './text';\n\nconst password = text;\n\nexport default password;\n\n","import pipe from '../../../pipe';\nimport {deconstruct, secureHtml} from '../../../utils';\n\nconst radio = function ({$ctx, $el, $exp, $scope}) { //$ctx, $el, $arg, $exp\n  const {prop, watch, secure, pipes} = deconstruct($exp);\n  const watcher = function (value) {\n\n    if (value + '' === $el.val()) {\n      //$el.attr('checked', true);\n      $el[0].checked = true;\n    } else {\n      $el[0].checked = false;\n    }\n  };\n  const inputer = function () {\n    $scope.$set(prop, $el.val());\n  };\n  const pipeline = pipe.compile({\n    prop: prop, watch, secure\n  }, pipes, $scope, watcher, $ctx);\n\n  // if already checked\n  if ($el[0].checked) {\n    inputer();\n  }\n\n  watcher(pipeline($scope.$get(prop)));\n\n  if (watch) {\n    let unwatcher = null;\n    return {\n      $mount() {\n        unwatcher = $scope.$watch(prop, function (value) {\n          watcher(pipeline(value));\n        });\n        $el.on('change', inputer);\n      },\n      $unmount() {\n        unwatcher();\n        $el.off('change', inputer);\n        pipeline.destroy();\n      }\n    };\n  } else {\n    pipeline.destroy();\n  }\n};\n\nexport default radio;\n","import pipe from '../../../pipe';\nimport {deconstruct, secureHtml} from '../../../utils';\n\nconst checkbox = function ({$ctx, $el, $exp, $scope}) { //$ctx, $el, $arg, $exp\n  const {prop, watch, secure, pipes} = deconstruct($exp);\n\n  const indexOf = (values, value) => {\n    values = values || [];\n    for (let i = 0, ii = values.length; i < ii; i++) {\n      if (values[i] === value + '') {\n        return i;\n      }\n    }\n    return -1;\n  };\n\n  const watcher = function (values) {\n    if (-1 != indexOf(values, $el.val())) {\n      $el[0].checked = true;\n    } else {\n      $el[0].checked = false;\n    }\n  };\n  const inputer = function () {\n    const values = $scope.$get(prop) || [];\n    if ($el[0].checked) {\n      values.push($el.val());\n    } else {\n\n      const index = indexOf(values, $el.val());\n      if (-1 != index) {\n        values.splice(index, 1);\n      }\n    }\n\n    $scope.$set(prop, values)\n  };\n  const pipeline = pipe.compile({\n    prop: prop, watch, secure\n  }, pipes, $scope, watcher, $ctx);\n\n  // if already checked\n  if ($el[0].checked) {\n    inputer();\n  }\n\n  watcher(pipeline($scope.$get(prop)));\n\n  if (watch) {\n    let unwatcher = null;\n    return {\n      $mount() {\n        unwatcher = $scope.$watch(prop, function (value) {\n          watcher(pipeline(value));\n        });\n        $el.on('change', inputer);\n      },\n      $unmount() {\n        unwatcher();\n        $el.off('change', inputer);\n        pipeline.destroy();\n      }\n    };\n  } else {\n    pipeline.destroy();\n  }\n};\n\nexport default checkbox;\n","import text from './text';\nimport number from './number';\nimport tel from './tel';\nimport password from './password';\nimport radio from './radio';\nimport checkbox from './checkbox';\n\nconst input = function ({$ctx, $el, $exp, $scope}) { //$ctx, $el, $arg, $exp\n  switch (($el.attr('type') || '').toLowerCase()) {\n    case 'text':\n      return text({$ctx, $el, $exp, $scope});\n    case 'number':\n      return number({$ctx, $el, $exp, $scope});\n    case 'tel':\n      return tel({$ctx, $el, $exp, $scope});\n    case 'password':\n      return password({$ctx, $el, $exp, $scope});\n    case 'radio':\n      return radio({$ctx, $el, $exp, $scope});\n    case 'checkbox':\n      return checkbox({$ctx, $el, $exp, $scope});\n    default :\n      return text({$ctx, $el, $exp, $scope});\n  }\n};\n\nexport default input;\n","import text from './input/text';\n\nconst textarea = text;\n\nexport default textarea;\n\n","import text from './input/text';\n\nconst select = text;\n\nexport default select;\n\n","import input from './input/index';\nimport textarea from './textarea';\nimport select from './select';\n\nconst value = function ({$ctx, $el, $exp, $scope}) { //$ctx, $el, $arg, $exp\n  switch ($el[0].nodeName.toLowerCase()) {\n    case 'input':\n      return input({$ctx, $el, $exp, $scope});\n    case 'textarea':\n      return textarea({$ctx, $el, $exp, $scope});\n    case 'select':\n      return select({$ctx, $el, $exp, $scope});\n  }\n};\n\nexport default value;\n","import directive from '../directive';\nimport {secureHtml, isTrue} from '../utils';\n\nconst show = function ({$el, $exp, $scope, $ctx}) { //$ctx, $el, $arg, $exp\n  return directive.pattern($exp, $scope, $ctx, function ({newVal, secure}) {\n    newVal = secure ? secureHtml(newVal) : newVal;\n    if (isTrue(newVal)) {\n      $el.css('display', '');\n    } else {\n      $el.css('display', 'none');\n    }\n  });\n};\n\nexport default show;\n","import directive from '../directive';\nimport {secureHtml, isTrue} from '../utils';\n\nconst hide = function ({$el, $exp, $scope, $ctx}) { //$ctx, $el, $arg, $exp\n  return directive.pattern($exp, $scope, $ctx, function ({newVal, secure}) {\n    newVal = secure ? secureHtml(newVal) : newVal;\n    if (!isTrue(newVal)) {\n      $el.css('display', '');\n    } else {\n      $el.css('display', 'none');\n    }\n  });\n};\n\nexport default hide;\n","import directive from '../directive';\nimport {secureHtml, isTrue} from '../utils';\n\nconst disable = function ({$el, $exp, $scope, $ctx}) { //$ctx, $el, $arg, $exp\n  return directive.pattern($exp, $scope, $ctx, function ({newVal, secure}) {\n    newVal = secure ? secureHtml(newVal) : newVal;\n    if (isTrue(newVal)) {\n      $el.attr('disabled', true);\n    } else {\n      $el.removeAttr('disabled');\n    }\n  });\n};\n\nexport default disable;\n","import directive from '../directive';\nimport {secureHtml, isTrue} from '../utils';\n\nconst enable = function ({$el, $exp, $scope, $ctx}) { //$ctx, $el, $arg, $exp\n  return directive.pattern($exp, $scope, $ctx, function ({newVal, secure}) {\n    newVal = secure ? secureHtml(newVal) : newVal;\n    if (isTrue(newVal)) {\n      $el.removeAttr('disabled');\n    } else {\n      $el.attr('disabled', true);\n    }\n  });\n};\n\nexport default enable;\n","import directive from '../directive';\nimport {secureHtml, isTrue} from '../utils';\n\nconst readonly = function ({$el, $exp, $scope, $ctx}) { //$ctx, $el, $arg, $exp\n  return directive.pattern($exp, $scope, $ctx, function ({newVal, secure}) {\n    newVal = secure ? secureHtml(newVal) : newVal;\n    if (isTrue(newVal)) {\n      $el.attr('readonly', 'readonly');\n    } else {\n      $el.removeAttr('readonly');\n    }\n  });\n};\n\nexport default readonly;\n","import directive from '../directive';\nimport {secureUri} from '../utils';\n\nconst src = function ({$el, $exp, $scope, $ctx}) { //$ctx, $el, $arg, $exp\n  return directive.pattern($exp, $scope, $ctx, function ({newVal, secure}) {\n    $el.attr('src', secure ? secureUri(newVal) : newVal);\n  });\n};\n\nexport default src;\n","import directive from '../directive';\nimport {secureUri} from '../utils';\n\nconst href = function ({$el, $exp, $scope, $ctx}) { //$ctx, $el, $arg, $exp\n  return directive.pattern($exp, $scope, $ctx, function ({newVal, secure}) {\n    $el.attr('href', secure ? secureUri(newVal, ['&']) : newVal);\n  });\n};\n\nexport default href;\n","import directive from '../directive';\nimport {secureHtml, deconstruct, construct} from '../utils';\n\nconst klass = function ({$el, $exp, $arg, $scope, $ctx}) { //$ctx, $el, $arg, $exp\n  const {prop, watch, secure} = deconstruct($exp);\n  const regexp = /\\{([\\s\\S]+)}\\[([\\s\\S]+)]/;\n\n  // mapping\n  if (regexp.test(prop)) {\n    const instances = prop.split(';').map(function (klass) {\n      if (klass == null || klass === '') {\n        return;\n      }\n\n      const matches = klass.match(regexp);   //{'red': 'bg-red', 'green': 'bf-green'}[bgColor]\n      const data = {};\n      matches[1].split(',').forEach(function (kv) {\n        const index = kv.indexOf(':');\n        const key = kv.substring(0, index).trim().replace(/^['\"]|['\"]$/g, '');\n        const val = kv.substring(index + 1).trim().replace(/^['\"]|['\"]$/g, '');\n        data[key] = val;\n      });\n      const watcher = function (newVal, oldVal) {\n        newVal = secure ? secureHtml(data[newVal]) : data[newVal];\n        oldVal = secure ? secureHtml(data[oldVal]) : data[oldVal];\n\n        if (newVal) {\n          $el.addClass(newVal);\n        }\n\n        if (oldVal) {\n          $el.removeClass(oldVal);\n        }\n      };\n\n      watcher($scope.$get(matches[2]));\n\n      return {\n        prop: matches[2],\n        watcher\n      };\n    });\n\n    if (watch) {\n      let unwatchers = [];\n      return {\n        $mount() {\n          for (const instance of instances) {\n            if (!instance) {\n              continue;\n            }\n\n            const {prop, watcher} = instance;\n            unwatchers.push($scope.$watch(prop, watcher))\n          }\n        },\n        $unmount() {\n          for (const unwatcher of unwatchers) {\n            unwatcher();\n          }\n          unwatchers = null;\n        }\n      };\n    }\n  } else {\n    prop.split(',').map(function (exp) {\n      if (exp == null || exp === '') {\n        return;\n      }\n\n      return directive.pattern(construct(exp, watch, secure), $scope, $ctx, function ({newVal, oldVal}) {\n        newVal = secure ? secureHtml(newVal) : newVal;\n        oldVal = secure ? secureHtml(oldVal) : oldVal;\n\n        if (newVal) {\n          $el.addClass(newVal);\n        }\n\n        if (oldVal) {\n          $el.removeClass(oldVal);\n        }\n      });\n    });\n\n\n  }\n};\n\nexport default klass;\n","import directive from '../directive';\nimport {secureHtml, deconstruct} from '../utils';\n\nconst attr = function ({$el, $exp, $arg, $scope, $ctx}) { //$ctx, $el, $arg, $exp\n  return directive.pattern($exp, $scope, $ctx, function ({newVal, secure}) {\n    newVal = secure ? secureHtml(newVal) : newVal;\n    if (!(newVal === 'false' || !newVal)) {\n      $el.attr($arg, newVal);\n    } else {\n      $el.removeAttr($arg);\n    }\n  });\n};\n\nexport default attr;\n","import directive from '../directive';\nimport {secureHtml, deconstruct} from '../utils';\n\nconst css = function ({$el, $exp, $arg, $scope, $ctx}) { //$ctx, $el, $arg, $exp\n  return directive.pattern($exp, $scope, $ctx, function ({newVal, secure}) {\n    newVal = secure ? secureHtml(newVal) : newVal;\n    $el.css($arg, newVal);\n  });\n};\n\nexport default css;\n","import directive from '../directive';\nimport {secureHtml, deconstruct} from '../utils';\n\nconst data = function ({$el, $exp, $arg, $scope, $ctx}) { //$ctx, $el, $arg, $exp\n  return directive.pattern($exp, $scope, $ctx, function ({newVal, secure}) {\n    newVal = secure ? secureHtml(newVal) : newVal;\n    $el.attr('data-' + $arg, newVal);\n  });\n};\n\nexport default data;\n","import component from './component';\nimport element from './element';\nimport pipe from './pipe';\nimport {assign, include, getAttrs, deconstruct, MapList} from './utils';\n\n// 优先级常量, 最高-9, 默认0\nconst PRIOR = {\n  EMERGENCY: -9,\n  DEFAULT: 0\n};\n\n// 优先级\nconst priorities = [];\n\n// 全局指令\nconst directives = {};\n\n/**\n * 指令模块\n * 指令模块解析DOM上定义的属性并进行实例化\n * @param name 指令名\n * @param factory 工厂函数\n * @param priority 优先级\n */\nconst directive = function (name, factory, priority = PRIOR.DEFAULT) {\n\n  // 创建优先级\n  if (-1 === include(priorities, priority)) {\n    priorities.push(priority);\n    priorities.sort(function (prev, next) {\n      return prev - next;\n    });\n  }\n\n  // 工厂函数上附加优先级\n  factory.priority = priority;\n  directives[name] = factory;\n};\n\nassign(directive, {\n  PRIOR,\n  initial($ctx) {\n\n    // 加载全局指令、局部指令至当前上下文\n    $ctx.$directives = assign({}, directives, $ctx.$directives);\n\n    // 记录指令实例,便于销毁释放\n    $ctx.$directives._instances = new MapList;\n  },\n  compile($el, $scope, $ctx) {\n\n    const handler = function ($el, $ctx, priority) {\n\n      // 是否为组件\n      if (component.isComponent($el, $ctx)) {\n        return $el;\n      }\n\n      // 获得当前元素的所有ATTR属性并进行编译\n      const attrs = getAttrs($el);\n      for (var attr in attrs) {\n        let name, arg;\n        const index = attr.indexOf(':');\n        if (index != -1) {\n          name = attr.substring(0, index);\n          arg = attr.substring(index + 1);\n        } else {\n          name = attr;\n          arg = null;\n        }\n\n        const factory = $ctx.$directives[name];\n        if (factory && (factory.priority || PRIOR.DEFAULT) === priority) {\n          const instance = factory({\n            $ctx,\n            $el,\n            $arg: arg,\n            $exp: attrs[attr],\n            $scope,\n            $directive: name\n          });\n\n          if (instance) {\n            instance.$mount && instance.$mount($ctx);\n            $ctx.$directives._instances.add(element.getId($el, true), instance);\n\n            // halt compile\n            // if (instance.$halt) {\n            //   return null;\n            // }\n\n            // if $el changed after compile\n            if (typeof instance.$el != 'undefined') {\n              $el = instance.$el;\n            }\n          }\n        }\n      }\n\n      return $el;\n    };\n\n    // 根据指令优先级由高至低进行编译\n    $el = priorities.reduce(function ($el, priority) {\n      if (!$el) {\n        return null;\n      }\n\n      return handler($el, $ctx, priority);\n    }, $el);\n\n    return $el;\n\n  },\n  pattern($exp, $scope, $ctx, $update) {\n    const {prop, watch, secure, pipes} = deconstruct($exp);\n    const wather = function (newVal, oldVal) {\n      $update({newVal, oldVal, secure}); //secure ? secureHtml(value) : value\n    };\n    const pipeline = pipe.compile({\n      prop, watch, secure\n    }, pipes, $scope, wather, $ctx);\n\n    wather(pipeline($scope.$get(prop)));\n\n    if (watch) {\n      let unwatcher = null;\n      return {\n        $mount() {\n          unwatcher = $scope.$watch(prop, function (newVal, oldVal) {\n            wather(pipeline(newVal), pipeline(oldVal));\n          });\n        },\n        $unmount() {\n          unwatcher();\n          pipeline.destroy();\n        }\n      };\n    } else {\n      pipeline.destroy();\n    }\n  },\n  remove($el, $ctx) {\n    if (component.isComponent($el, $ctx)) {\n      return;\n    }\n\n    const id = element.getId($el);\n    if (id != null) {\n      const instances = $ctx.$directives._instances.find(id);\n      for (const instance of instances) {\n        instance.$unmount && instance.$unmount($ctx);\n      }\n      $ctx.$directives._instances.remove(id);\n    }\n  },\n  destroy($ctx) {\n    const keys = $ctx.$directives._instances.keys();\n    for (const key in keys) {\n      const instances = $ctx.$directives._instances.find(key);\n      for (const instance of instances) {\n        instance.$unmount && instance.$unmount(this);\n      }\n    }\n\n    $ctx.$directives._instances.clear();\n    $ctx.$directives._instances = null;\n    $ctx.$directives = null;\n  }\n});\n\nexport default directive;\n\n// 内建指令\nimport ef from './directives/if';\nimport repeat from './directives/repeat';\nimport on from './directives/on';\nimport bind from './directives/bind';\nimport value from './directives/value/index';\nimport show from './directives/show';\nimport hide from './directives/hide';\nimport disable from './directives/disable';\nimport enable from './directives/enable';\nimport readonly from './directives/readonly';\nimport src from './directives/src';\nimport href from './directives/href';\nimport klass from './directives/klass';\nimport attr from './directives/attr';\nimport css from './directives/css';\nimport data from './directives/data';\n\ndirective('hi-if', ef, directive.PRIOR.EMERGENCY);\ndirective('hi-repeat', repeat, directive.PRIOR.EMERGENCY);\ndirective('hi-on', on);\ndirective('hi-bind', bind);\ndirective('hi-value', value);\ndirective('hi-show', show);\ndirective('hi-hide', hide);\ndirective('hi-disable', disable);\ndirective('hi-enable', enable);\ndirective('hi-readonly', readonly);\ndirective('hi-src', src);\ndirective('hi-href', href);\ndirective('hi-class', klass);\ndirective('hi-attr', attr);\ndirective('hi-css', css);\ndirective('hi-data', data);\n","import {deconstruct, secureHtml} from '../utils';\nimport pipe from '../pipe';\n\n\nconst bind = function ({$exp, $update, $scope, $ctx}) {\n\n  const {prop, watch, secure, pipes} = deconstruct($exp);\n\n  const pipeline = pipe.compile({\n    prop, watch, secure\n  }, pipes, $scope, $update, $ctx);\n\n  if (watch) {\n    return {\n      $mount() {\n        $scope.$watch(prop, $update);\n      },\n      $unmount() {\n        $scope.$unwatch(prop, $update);\n        pipeline.destroy();\n      },\n      $iterator($text) {\n        return $text.replace($exp, function () {\n          let value = pipeline($scope.$get(prop));\n          value = value == null ? '' : value;\n          return secure ? secureHtml(value) : value;\n        });\n      }\n    };\n  } else {\n    let value = pipeline($scope.$get(prop));\n    value = value == null ? '' : value;\n    pipeline.destroy();\n    return {\n      $iterator: {\n        $exp,\n        $value: secure ? secureHtml(value) : value\n      }\n    }\n  }\n};\n\nexport default bind;\n","import component from './component';\nimport element from './element';\nimport {assign, MapList} from './utils';\n\n// 全局宏指令\nconst macros = {};\n\n/**\n * 宏指令\n * 在文本中的绑定,称之为宏,例如<span>hi, i am {{name}}, {{sex}}</span>\n * 宏指令使用正则表达式进行文本匹配,当文本匹配,调用相应的工厂函数生成宏指令实例\n * @param exp 正则表达式\n * @param factory 工厂函数\n */\nconst macro = function (exp, factory) {\n  macros[exp] = factory;\n};\n\nassign(macro, {\n\n\t/**\n   * 宏指令初始化\n   * @param $ctx 上下文\n   */\n  initial($ctx) {\n\n    // 加载全局宏指令、局部宏指令至当前上下文\n    $ctx.$macros = assign({}, macros, $ctx.$macros, true);\n\n    // 记录宏实例,便于销毁释放\n    $ctx.$macros._instances = new MapList;\n  },\n\n\t/**\n   * 宏指令编译\n   * @param $el 元素\n   * @param $scope 作用域\n   * @param $ctx 上下文\n   * @returns {*}\n   */\n  compile($el, $scope, $ctx) {\n\n    // 当前元素有子元素\n    if ($el.children().length) {\n      return $el;\n    }\n\n    // 获取元素原始文本\n    const text = $el.text();\n    if (text == null || text === '') {\n      return $el;\n    }\n\n\t\t/**\n     * 在一段文本中,可能有多个宏指令,例如<span>hi, i am {{name}}, {{sex}}</span>\n     * 其中任意一个字段值发生变化,都需要进行整体更新\n     * @type {Array}\n     */\n    const instances = [];\n    const update = function () {\n      if (!instances || !instances.length) {\n        return;\n      }\n\n\t\t\t//分别调用了宏指令实例的$iterator方法,获得最后的目标值\n      const newHtml = instances.reduce(function (text, instance) {\n        const $iterator = instance.$iterator;\n        if (!$iterator) {\n          return text;\n        }\n\n        // 如$iterator是个函数,则调用\n\n\t\t\t\t/**\n         * 判断$iterator类型\n         * 如函数,则调用;如不是,直接进行replace\n         * 为什么需要判断$iterator类型?\n         * Highway同时支持双向绑定{{}}和单向绑定[[]]\n         * 例如<span>hi, i am {{name}}, [[sex]]</span>\n         * {{name}}双向, [[sex]]单向\n         * 双向绑定相较于单向绑定会耗费更多的内存资源,对于大多数情况而言,单向绑定已满足需求\n         * 在使用单向绑定时直接返回目标值,可以减少内存资源占用\n         */\n        if ($.isFunction($iterator)) {\n          return $iterator(text);\n        } else {\n          return text.replace($iterator.$exp, $iterator.$value);\n        }\n\n      }, text);\n\n\t\t\t/**\n       * 获取目标值后进行更新\n       * 为什么使用html()而不是text()?\n       * Highway支持安全编码{{ }}、[[ ]]和非安全编码{{{ }}}、[[[ ]]]\n       * 例如使用name值为&nbsp; {{name}}输出{{&nbsp;}}, {{{name}}}输出{{{ }}}\n       * 在使用时尽量使用安全编码,防止跨站攻击等安全问题\n       */\n\n      $el.html(newHtml == null ? '' : newHtml);\n    };\n\n\t\t/**\n     * 对当期文本调用宏指令正则表达式\n     * 如果匹配,则生成宏指令实例\n     */\n    for (const exp in $ctx.$macros) {\n      const matches = text.match(new RegExp(exp, 'gm'));\n      if (matches) {\n        // 有可能匹配到了多个, 例如: <span>hi, i am {{name}}, {{sex}}</span>\n        for (const match of matches) {\n          //以匹配到{{name}}为例\n          const instance = $ctx.$macros[exp]({\n            $ctx, // 上下文\n            $el, // 元素。 示例值为: span\n            $exp: match, // name\n            $update: update, // 更新函数,如果字段值发生变化,需要即使更新显示值\n            $scope // 作用域\n          });\n          if (!$.isFunction(instance.$iterator)) {\n            instance.$iterator.$exp = match;\n          };\n\n          // $mount hook\n          instance.$mount && instance.$mount($ctx);\n\n          // instance\n          instances.push(instance);\n\n          // 为元素编码,在删除元素时需要释放对应的宏指令实例\n          $ctx.$macros._instances.add(element.getId($el, true), instance);\n        }\n      }\n    }\n\n    // 首次调用触发更新\n    update();\n\n    return $el;\n  },\n\t/**\n   * 销毁元素上的宏指令实例\n   * @param $el DOM元素\n   * @param $ctx 上下文\n   */\n  remove($el, $ctx) {\n\n    // 如果是组件, 返回, 组件的销毁由组件模块进行销毁\n    if (component.isComponent($el, $ctx)) {\n      return;\n    }\n\n    // 获取DOM元素上的ID,得到对应的宏指令实例,并进行销毁\n    const id = element.getId($el);\n    if (id != null) {\n      let instances = $ctx.$macros._instances.find(id);\n      for (const instance of instances) {\n        instance.$unmount && instance.$unmount($ctx);\n      }\n      $ctx.$macros._instances.remove(id);\n    }\n  },\n\t/**\n   * 销毁宏指令模块\n   * @param $ctx 上下文\n   */\n  destroy($ctx) {\n\n    // 销毁所有宏指令实例\n    const keys = $ctx.$macros._instances.keys();\n    for (const key in keys) {\n      const instances = $ctx.$macros._instances.find(key);\n      for (const instance of instances) {\n        instance.$unmount && instance.$unmount($ctx);\n      }\n    }\n    $ctx.$macros._instances.clear();\n    $ctx.$macros._instances = null;\n    $ctx.$macros = null;\n\n  }\n});\n\nexport default macro;\n\n// 内建宏指令\nimport bind from './macros/bind';\nmacro('\\\\[?\\\\[\\\\[([^\\\\]]+)]]]?|\\\\{?\\\\{\\\\{([^}]+)}}}?', bind);\n//macro('\\\\[?\\\\[\\\\[(\\\\S+)]]]?|\\\\{?\\\\{\\\\{(\\\\S+)}}}?', bind);\n","import element from './element';\nimport component from './component';\nimport service from './service';\nimport directive from './directive';\nimport macro from './macro';\nimport pipe from './pipe';\n\n/**\n * 编译器\n * 对元素（模板）、管道、服务、指令、组件、宏编译服务进行挂载与编译\n * 编译器进行编译工作时，对指定DOM元素进行递归遍历编译\n * @type {{initial: (($ctx?)), compile: (($el?, $scope?, $ctx?)), remove: (($el?, $ctx?)), destroy: (($ctx?))}}\n */\nconst compiler = {\n\n  /**\n   * 初始化\n   * @param $ctx 上下文\n   */\n  initial($ctx) {\n\n    // 元素\n    element.initial($ctx);\n\n    // 管道\n    pipe.initial($ctx);\n\n    // 服务\n    service.initial($ctx);\n\n    // 指令\n    directive.initial($ctx);\n\n    // 宏指令\n    macro.initial($ctx);\n\n    // 组件\n    component.initial($ctx);\n\n    return this;\n  },\n\n\t/**\n   * 对DOM进行遍历并编译\n   * @param $el 元素\n   * @param $scope 作用域\n   * @param $ctx 上下文\n   */\n  compile($el, $scope, $ctx) {\n\n\t\t/**\n     * 迭代\n     * @param $el 元素\n     * @param $scope 作用域\n     * @param $ctx 上下文\n     */\n    const iterator = ($el, $scope, $ctx) => {\n      if (!$el || !$el.length) {\n        return;\n      }\n\n      // 如果是组件,则进行组件编译\n      if (component.isComponent($el, $ctx)) {\n\n        // 组件编译\n        component.compile($el, $ctx)\n      } else {\n\n        // 指令编译\n        if ($el = directive.compile($el, $scope, $ctx)) {\n\n          // 宏指令编译\n          if ($el = macro.compile($el, $scope, $ctx)) {\n\n            // 子元素\n            for (const childNode of Array.prototype.slice.call($el.children())) {\n              iterator($(childNode), $scope, $ctx);\n            }\n          }\n        }\n      }\n    };\n\n    iterator($el, $scope, $ctx);\n\n    return this;\n  },\n\n\t/**\n   * 对DOM元素进行销毁并删除\n   * @param $el 元素\n   * @param $ctx 上下文\n   * @returns {compiler.remove}\n   */\n  remove($el, $ctx) {\n\n\t\t/**\n     * 迭代器\n     * @param $el 元素\n     * @param $ctx 上下文\n     */\n    const iterator = ($el, $ctx) => {\n      if (!$el || !$el.length) {\n        return;\n      }\n\n      // 如果是组件\n      if (component.isComponent($el, $ctx)) {\n\n        // 组件销毁\n        component.remove($el, $ctx);\n      } else {\n\n        // 遍历子元素\n        for (const childNode of Array.prototype.slice.call($el.children())) {\n          iterator($(childNode), $ctx);\n        }\n\n        // 宏指令销毁\n        macro.remove($el, $ctx);\n\n        // 指令销毁\n        directive.remove($el, $ctx);\n\n        // 元素销毁\n        element.remove($el, $ctx);\n      }\n    };\n\n    iterator($el, $ctx);\n\n    return this;\n  },\n  destroy($ctx) {\n\n    // 组件\n    component.destroy($ctx);\n\n    // 宏指令\n    macro.destroy($ctx);\n\n    // 指令\n    directive.destroy($ctx);\n\n    // 服务\n    service.destroy($ctx);\n\n    // 管道\n    pipe.destroy($ctx);\n\n    // 元素\n    element.destroy($ctx);\n\n    return this;\n  }\n};\n\nexport default compiler;\n","import {extend, assign} from './utils';\nimport compiler from './compiler';\n\n/**\n * 视图层\n */\nclass View {\n  static extend = extend;\n\n  /**\n   * 构造\n   * @param options 参数\n   */\n  constructor(options) {\n\n    assign(this, options);\n\n    // $willmount hook\n    this.$willmount && this.$willmount();\n\n    // compiler, initial -> compile\n    compiler.initial(this).compile(this.$el, this.$scope, this);\n\n    // $mount hook，最常用\n    this.$mount && this.$mount();\n\n    // $didmount hook\n    this.$didmount && this.$didmount();\n  }\n\n  /**\n   * 销毁\n   */\n  $destroy() {\n\n    // $willunmount hook\n    this.$willunmount && this.$willunmount();\n\n    // compiler, remove -> destroy\n    compiler.remove(this.$el, this).destroy(this);\n\n    // $unmount hook, 最常用\n    this.$unmount && this.$unmount();\n\n    // $didunmount hook\n    this.$didunmount && this.$didunmount();\n  }\n}\n\nexport default View;\n","import View from './view';\nimport component from './component';\nimport service from './service';\nimport directive from './directive';\nimport macro from './macro';\nimport pipe from './pipe';\nimport utils from './utils';\n\n/**\n * Highway MVVM\n */\n\nconst highway = utils.assign(View, {\n  component,\n  directive,\n  service,\n  macro,\n  pipe,\n  utils\n});\n\nexport default highway;\n","//import 'babel-polyfill';\nimport Highway from './highway';\n\nwindow.Highway = Highway;\n\n"],"names":["unique","prefix","counter","include","arr","val","i","ii","length","isDate","Date","isArray","Object","prototype","toString","call","isObject","isNumeric","isNaN","isTrue","isEqual","val0","val1","extend","options","Parent","this","Child","deconstruct","exp","watch","secure","test","trim","replace","exps","split","map","attr","slice","construct","secureHtml","html","secureUri","getAttrs","$el","attrs","node","attributes","hasOwnProperty","name","value","assign","args","Array","arguments","jQuery","deep","pop","unshift","$","apply","isPlainObject","MapList","data","key","list","push","remove","v","splice","result","k","keys","values","concat","find","components","component","View","toLowerCase","$ctx","$components","_instances","$refs","isComponent","createComponent","instance","add","element","getId","ref","instances","nodeType","tagName","$parent","$new","hi-component","replaceWith","id","forEach","$destroy","$template","generate","lowercase","$value","uppercase","toUpperCase","sort","$source","sourceProp","prop","sourceWatch","sourceSecure","$exp","$scope","$pipeline","$update","matches","match","fieldProp","ascProp","iterator","field","$get","asc","a","b","fieldUnwatcher","ascUnwatcher","$watch","limit","unwatcher","SYMBOLS","filter","conds","satisfy","obj","symbol","valueProp","EQUAL","STRICT_EQUAL","NOT_EQUAL","STRICT_NOT_EQUAL","START_WITH","RegExp","END_WITH","CONTAINS","item","unwatchers","json","JSON","stringify","date","format","getMonth","getDate","getHours","getMinutes","getSeconds","Math","floor","getMilliseconds","$1","getFullYear","substr","number","toFixed","pipes","pipe","factory","$pipes","pipeline","reduce","$iterator","index","indexOf","substring","$mount","$unmount","clear","scope","series","watchers","create","prop2","childProp","where","$where","newVal","path","props","tmp","shift","join","oldSeries","newSeries","$series","arrayIndex","oldValue","newValue","$fire","handler","$unwatch","oldVal","handlers","bind","$set","event","events","$on","$off","$listenTo","$listenToOnce","stopper","once","$stopListening","$emit","parent","$broadcast","child","listenToOnce","timeout","ids","$timeout","delay","window","setTimeout","clearTimeout","$clear","$interval","setInterval","clearInterval","http","$http","ajax","get","post","getJSON","ajaxJSONP","ajaxSettings","ajaxSetup","$find","selector","services","service","$services","interval","ef","$directive","$arg","$clone","clone","removeAttr","$prev","prev","$next","next","watcher","insertBefore","insertAfter","appendTo","compile","repeat","itemProp","arrayProp","$els","scopes","$index","$create","reverse","destroy","on","$ev","off","directive","pattern","text","$srcEl","inputer","tel","password","radio","checked","checkbox","input","textarea","select","nodeName","show","css","hide","disable","enable","readonly","src","href","klass","regexp","kv","addClass","removeClass","PRIOR","priorities","directives","priority","DEFAULT","$directives","arg","wather","EMERGENCY","$text","macros","macro","$macros","children","update","newHtml","isFunction","compiler","initial","childNode","$willmount","$didmount","$willunmount","$didunmount","highway","utils","Highway"],"mappings":"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"}